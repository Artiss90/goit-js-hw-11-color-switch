{"version":3,"sources":["webpack:///./index.js"],"names":["colors","refs","body","document","querySelector","startBtn","stopBtn","timerId","startIsActive","addEventListener","setInterval","colorSwitch","clearInterval","arrColors","min","max","nowColor","length","Math","floor","random","addColor","color","style","backgroundColor","console","log"],"mappings":"kHAAA,qBAMMA,EAAS,CACb,UACA,UACA,UACA,UACA,UACA,WAQIC,EAAO,CACXC,KAAMC,SAASC,cAAc,QAC7BC,SAAUF,SAASC,cAAc,+BACjCE,QAASH,SAASC,cAAc,+BAE9BG,EAAU,KACVC,GAAgB,EAEpBP,EAAKI,SAASI,iBAAiB,SAAS,WAClCD,IAEJA,GAAgB,EAChBD,EAAUG,aAAY,WAAQC,EAAYX,KAAW,SAIvDC,EAAKK,QAAQG,iBAAiB,SAAS,WACrCD,GAAgB,EAChBI,cAAcL,MAGhB,IAAMI,EAAc,SAACE,GACnB,IA1BiCC,EAAKC,EA0BhCC,EAAWH,GA1BgBC,EA0BoB,EA1BfC,EA0BkBF,EAAUI,OAAS,EAzBpEC,KAAKC,MAAMD,KAAKE,UAAYL,EAAMD,EAAM,GAAKA,KA0BpDO,EAASL,IAGLK,EAAU,SAACC,GACfrB,EAAKC,KAAKqB,MAAMC,gBAAkBF,GAIpCG,QAAQC,IAAInB,K","file":"main.b013f45b65331fff4715.js","sourcesContent":["// import { Theme } from './js/task';\n// import menuTemplate from './templates/template-menu.hbs';\nimport './styles.css';\n// import BSN from 'bootstrap.native';\n\n\nconst colors = [\n  '#FFFFFF',\n  '#2196F3',\n  '#4CAF50',\n  '#FF9800',\n  '#009688',\n  '#795548',\n];\n\n// Для генерации случайного числа (индекс элемента массива цветов), используем функцию randomIntegerFromInterval.\nconst randomIntegerFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst refs = {\n  body: document.querySelector('body'),\n  startBtn: document.querySelector('button[data-action=\"start\"]'),\n  stopBtn: document.querySelector('button[data-action=\"stop\"]'),\n};\nlet timerId = null;\nlet startIsActive = false;\n\nrefs.startBtn.addEventListener('click', () => {\n  if (startIsActive) {return\n  }\n  startIsActive = true;\n  timerId = setInterval(() => { colorSwitch(colors) }, 1000)\n}\n);\n\nrefs.stopBtn.addEventListener('click', () => {\n  startIsActive = false;\n  clearInterval(timerId)\n});\n\nconst colorSwitch = (arrColors) => {\n  const nowColor = arrColors[randomIntegerFromInterval(0, arrColors.length - 1)]\n  addColor(nowColor)\n}\n\nconst addColor =(color) => {\n  refs.body.style.backgroundColor = color\n}\n\n\nconsole.log(timerId);\n"],"sourceRoot":""}